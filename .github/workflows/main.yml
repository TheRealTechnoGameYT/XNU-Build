name: Build XNU (Automatique)

on:
  workflow_dispatch:   # permet de lancer manuellement le workflow
  push:
    branches:
      - main
      - master

jobs:
  build-xnu:
    runs-on: macos-15
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print runner info
        run: |
          sw_vers
          xcodebuild -version
          uname -a
          sysctl -n hw.ncpu || true

      - name: Install required tools
        run: |
          set -e
          # Installer Homebrew si manquant
          if ! command -v brew >/dev/null 2>&1; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" || true
            echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $GITHUB_ENV
            eval "$(/opt/homebrew/bin/brew shellenv)"
          fi
          brew install autoconf automake libtool gnu-tar || true
          autoconf --version || true

      - name: Install KDK
        run: |
          set -e
          # KDK officiel fourni dans le repo à la racine (kdk.dmg)
          if [ -f ./kdk.dmg ]; then
            echo "Found official KDK in repo, mounting..."
            hdiutil attach kdk.dmg -nobrowse -quiet -mountpoint /Volumes/_kdk_temp
            sudo mkdir -p /Library/Developer/KDKs
            sudo cp -R /Volumes/_kdk_temp/*.kdk /Library/Developer/KDKs/
            hdiutil detach /Volumes/_kdk_temp -quiet
          else
            echo "kdk.dmg not found! Upload a KDK dmg to the repo root."
            exit 1
          fi

      - name: Clone XNU sources
        run: |
          git clone --depth 1 https://github.com/apple-oss-distributions/xnu.git xnu-src
          cd xnu-src
          git rev-parse --short HEAD

      - name: Build XNU
        env:
          RC_DARWIN_KERNEL_VERSION: 20  # Modifier selon la version XNU ciblée
          SDKROOT: ""                    # Laisser vide pour utiliser le SDK du KDK
        run: |
          cd xnu-src
          ARCH=X86_64                    # Modifier en ARM64 si besoin
          echo "Building XNU kernel for ARCH=$ARCH"
          make ARCH_CONFIGS=$ARCH KERNEL_CONFIGS=RELEASE -j$(sysctl -n hw.ncpu)

      - name: Upload Kernel Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: xnu-kernel
          path: |
            xnu-src/BUILD/obj/RELEASE_*/kernel
            xnu-src/BUILD/obj/RELEASE_*/*.dSYM
